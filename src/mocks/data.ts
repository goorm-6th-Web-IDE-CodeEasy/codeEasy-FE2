// data.ts
//알고리즘
export const AlgorithmData = {
    problems: [
        {
            id: 1,
            title: '이분 탐색',
            content: '이분 탐색 알고리즘을 구현하세요.',
            done: false,
            tier: '브론즈',
            type: 'Algorithm',
            successRate: '90%',
        },
        {
            id: 2,
            title: '정렬 알고리즘',
            content: '퀵 정렬과 병합 정렬을 비교하세요.',
            done: true,
            tier: '실버',
            type: 'Algorithm',
            successRate: '75%',
        },
        {
            id: 3,
            title: '다익스트라 알고리즘',
            content: '최단 경로를 찾는 다익스트라 알고리즘을 구현하세요.',
            done: false,
            tier: '골드',
            type: 'Algorithm',
            successRate: '60%',
        },
        {
            id: 4,
            title: '동적 계획법',
            content: '동적 계획법을 사용하여 피보나치 수를 계산하세요.',
            done: true,
            tier: '플래티넘',
            type: 'Algorithm',
            successRate: '85%',
        },
        {
            id: 5,
            title: '최소 신장 트리',
            content: '크루스칼 알고리즘을 사용하여 최소 신장 트리를 구하세요.',
            done: false,
            tier: '다이아',
            type: 'Algorithm',
            successRate: '50%',
        },
        {
            id: 6,
            title: '스택과 큐',
            content: '스택과 큐의 차이점을 설명하고, 각각의 사용 예를 들어 설명하세요.',
            done: true,
            tier: '브론즈',
            type: 'Data Structure',
            successRate: '95%',
        },
        {
            id: 7,
            title: '해시 테이블',
            content: '해시 테이블의 구현 방법과 충돌 해결 기법을 설명하세요.',
            done: false,
            tier: '실버',
            type: 'Data Structure',
            successRate: '70%',
        },
        {
            id: 8,
            title: '그래프 이론',
            content: 'BFS와 DFS를 비교 설명하세요.',
            done: true,
            tier: '골드',
            type: 'Data Structure',
            successRate: '65%',
        },
        {
            id: 9,
            title: '트리 구조',
            content: '이진 탐색 트리와 AVL 트리의 차이를 설명하세요.',
            done: false,
            tier: '플래티넘',
            type: 'Data Structure',
            successRate: '55%',
        },
        {
            id: 10,
            title: '네트워크 플로우',
            content: '포드-풀커슨 알고리즘을 설명하고 예제를 들어 설명하세요.',
            done: false,
            tier: '다이아',
            type: 'Algorithm',
            successRate: '45%',
        },
    ],
}

//로그인 (Member)
export const users = [
    {
        id: 1,
        email: '123@naver.com',
        password: '123',
        nickname: '말티푸',
        tier: 'Gold',
        completedChallenges: 80,
        avatar: 'https://source.unsplash.com/featured/?{puppy}',
    },
    {
        id: 2,
        email: '456@naver.com',
        password: '456',
        nickname: 'JaneDoe',
        tier: 'Silver',
        completedChallenges: 1,
        avatar: 'https://source.unsplash.com/featured/?{puppy}',
    },
]
